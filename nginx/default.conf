# limit_req_zone $binary_remote_addr zone=pleer:10m rate=20r/s;

upstream pleer {

    server 127.0.0.1:23456 max_fails=0 fail_timeout=30s;
    keepalive 8;

}

server {
    listen 80;
    listen [::]:80;

    server_name _;

    return 301 https://pleer.video$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /etc/nginx/ssl/pleer.video/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/pleer.video/privkey.pem;
    # ssl_dhparam /etc/nginx/ssl/pleer.video/dhparam.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
    resolver 1.1.1.1;
    resolver_timeout 10s;
    add_header X-Content-Type-Options "nosniff";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    root /home/pleer.video;

    index index.html;

    server_name .pleer.video;

    keepalive_timeout 10;
    client_max_body_size 10m;

    if ( $host != "pleer.video" ) {
        return 444;
    }

    if ( $request_method !~ ^(GET|POST)$ ) {
        return 444;
    }

    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* ^\/e.js$ {
        expires           1y;
        access_log        off;
        error_log         off;
        autoindex         off;
        try_files         $uri $uri/ /404.html =404;
    }

    location ~* ^/(config|node_modules|.*\.sh|package-lock\.json|package\.json|.*\.js)($|\/) {
        return 404;
    }

    if ( $request_uri ~ "/index.html" ) {
        rewrite ^(.*)/ $1/ permanent;
    }

    location ~* ^\/(result|ids|movies[\d]*|episodes[\d]*)\.json$ {
        root              /home/pleer.video/json;
        expires           1d;
        access_log        off;
        error_log         off;
        autoindex         off;
        try_files         $uri $uri/ /404.json =404;
    }

    location ~* ^\/(sitemap|turbo|movies[\d]*|episodes[\d]*|movies-RSS[\d]*|episodes-RSS[\d]*)\.xml$ {
        root              /home/pleer.video/xml;
        expires           1d;
        access_log        off;
        error_log         off;
        autoindex         off;
        try_files         $uri $uri/ /404.xml =404;
    }

    location ~* ^\/[\d]+\.(jpeg|jpg|png|webp|poster)$ {
        rewrite           "^\/([\d]+)\.(jpeg|jpg|png|webp|poster)$" "/$1.webp" break;
        root              /home/pleer.video/poster;
        expires           1y;
        access_log        off;
        error_log         off;
        autoindex         off;
        add_header        Cache-Control "public, no-transform";
        proxy_cache_valid 301 302 0;
        proxy_cache_valid 404 500 502 503 504 1m;
        proxy_cache_valid any 30d;
        try_files         $uri $uri/ /no-poster.jpg =404;
    }

    location ~* ^\/[\d]+\.(still|pic|picture|scr|screenshot|backdrop|photo|foto|img|image)$ {
        rewrite           "^\/([\d]+)\.(still|pic|picture|scr|screenshot|backdrop|photo|foto|img|image)$" "/$1.jpg" break;
        root              /home/pleer.video/still;
        expires           1y;
        access_log        off;
        error_log         off;
        autoindex         off;
        add_header        Cache-Control "public, no-transform";
        proxy_cache_valid 301 302 0;
        proxy_cache_valid 404 500 502 503 504 1m;
        proxy_cache_valid any 30d;
        try_files         $uri $uri/ /no-still.jpg =404;
    }

    location ~* ^\/[\d]+(\.html|)$ {
        rewrite           "^\/([\d]+)(\.html|)$" "/$1.html" break;
        root              /home/pleer.video/html;
        expires           1d;
        autoindex         off;
        add_header        Cache-Control "public, no-transform";
        proxy_cache_valid 301 302 0;
        proxy_cache_valid 404 500 502 503 504 1m;
        proxy_cache_valid any 30d;
        try_files         $uri $uri/ @pleer;
    }

    location ~* ^\/[\d]+\.json$ {
        expires           1d;
        autoindex         off;
        add_header        Cache-Control "public, no-transform";
        proxy_cache_valid 301 302 0;
        proxy_cache_valid 404 500 502 503 504 1m;
        proxy_cache_valid any 30d;
        try_files         $uri $uri/ @pleer;
    }

    location ~* ^/alice-webhook$ {
        proxy_max_temp_file_size 0;
        proxy_next_upstream      error timeout http_500 http_502 http_503 http_504;
        proxy_set_header         Connection        "";
        proxy_set_header         Host              $host;
        proxy_set_header         X-Real-IP         $remote_addr;
        proxy_set_header         X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header         X-Forwarded-Proto $scheme;
        proxy_http_version       1.1;
        proxy_pass               http://pleer;
    }

    location @pleer {
        # limit_req                zone=pleer burst=30;
        expires                  24h;
        proxy_max_temp_file_size 0;
        proxy_next_upstream      error timeout http_500 http_502 http_503 http_504;
        proxy_cache_bypass       $http_upgrade;
        proxy_redirect           off;
        proxy_set_header         Upgrade           $http_upgrade;
        proxy_set_header         Connection        'upgrade';
        proxy_set_header         Host              $host;
        proxy_set_header         X-Real-IP         $remote_addr;
        proxy_set_header         X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header         X-Forwarded-Proto $scheme;
        proxy_http_version       1.1;
        proxy_pass               http://pleer;
    }

    location / {
        expires           1h;
        access_log        off;
        error_log         off;
        autoindex         off;
        try_files         $uri $uri/ =404;
    }

    error_page 500 502 503 504 520 400 401 403 404 /404.html;
    location = /404.html {
        access_log off;
        autoindex  off;
        internal;
    }

}
